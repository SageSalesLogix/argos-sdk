{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0d4e2694ec721bac4f26","webpack:///./src/index.js","webpack:///./src/caching/index.js","webpack:///./src/mingle/index.js","webpack:///./src/picklist/index.js","webpack:///./index.js"],"names":["GeneralMessages","MissingRequiredFunctionalityError","NoInputNothingSetWarning","NamespaceAndNameParameterError","CachingServiceMessages","constructorError","setCacheStorageError","setCacheStorageWarning","getItemError","setItemError","removeItemError","CachingService","storage","setCacheStorage","getItem","setItem","removeItem","_cacheStorage","Error","console","warn","namespaceOrKey","name","JSON","parse","item","stringify","MingleService","options","accessToken","application","location","window","mingleConfig","redirectAction","redirect","url","href","bind","responseType","state","authorizationUrl","mingleSettings","pu","oa","redirectURI","mingleRedirectUrl","clientId","ci","encodeURI","isOnline","requiresMingleRefresh","hash","redirectToMingle","toast","refreshText","refreshTitle","substring","result","split","reduce","values","parts","access_token","expires_in","setTimeout","add","message","title","toastTime","showProgressBar","refreshAccessToken","error","PickListService","service","_storage","_service","_uri","_storageNameSpace","_storagePropertyDataTypeNameSpace","_storageFormDataTypeNameSpace","header","callback","onError","scope","_notImplemented","headerId","createItemByHeaderKey","headerName","headerKey","isId","itemArr","createItemsByHeaderKey","getFirstByKey","id","key","useCache","cachedResult","language","_buildOutOptions","where","_isNameOrID","handlers","success","$resources","length","log","failure","response","passedIn","nameArr","getAllByKey","idArr","keyArr","pickList","deleteByKey","code","deleteItemByHeaderKey","entityName","propertyName","select","resourceKind","_getBrowserLanguage","include","parent","_storageDataTypeNameSpace","formName","pickListName","obj","setResourceKind","setQueryArg","join","storageMode","results","optionName","includeItems","optionsObj","push","pickListServiceOptions","filter","strLangCode","userLangs","potentialLanguage","i","strVal","j","includeFallbacks","languageFromCookie","_getLanguageFromCookie","userLang","_getFromLanguageFromNavigator","languagePlusFallBacks","_breakDownALanguageCodeIntoFallBackParts","navigator","userLanguage","browserLanguage","cookieLangaugeKey","document","cookie","getCookie","cookies","forEach","trim","startsWith","replace","functionName","params"],"mappings":"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","file":"services.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ICRMServicesSDK\"] = factory();\n\telse\n\t\troot[\"ICRMServicesSDK\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0d4e2694ec721bac4f26","/**\n * @module\n * @description\n * Common API\n */\nexport * from './caching';\nexport * from './mingle';\nexport * from './picklist';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","const GeneralMessages = {\n  MissingRequiredFunctionalityError: 'The store provided was not compatible with the generic storage service. the store needs to have the following methods methods: getItem, setItem, removeItem.',\n  NoInputNothingSetWarning: 'Nothing was set, input was null.',\n\n  NamespaceAndNameParameterError: 'namespaceOrKey is required to be a string value.',\n\n};\nexport const CachingServiceMessages = {\n  constructorError: GeneralMessages.MissingRequiredFunctionalityError,\n  setCacheStorageError: GeneralMessages.MissingRequiredFunctionalityError,\n  setCacheStorageWarning: GeneralMessages.NoInputNothingSetWarning,\n  getItemError: GeneralMessages.NamespaceAndNameParameterError,\n  setItemError: GeneralMessages.NamespaceAndNameParameterError,\n  removeItemError: GeneralMessages.NamespaceAndNameParameterError,\n};\n\n/**\n * Caching Service class to act as a wrapper for different web/browser data stores.\n * @class CachingService\n */\nexport class CachingService {\n  /**\n   * Initialize Sage.CachingService, a simple wrapper for different web/browser data stores.\n   * @param {Object} storage  Will normally be either localStorage, or sessionStorage, but does not need to be.\n   *      Though it must have the following functions:\n   *                  getItem()\n   *                  setItem()\n   *                  removeItem()\n   */\n  constructor(storage /*= localStorage*/) {\n    this.setCacheStorage(storage);\n  }\n\n  /**\n   * @function set the data store used by this class.\n   *\n   * @param {Object} storage  Will normally be either localStorage, or sessionStorage, but does not need to be.\n   *      Though it must have the following functions:\n   *                  getItem()\n   *                  setItem()\n   *                  removeItem()\n   */\n  setCacheStorage(storage) {\n    if (storage) {\n      if (typeof (storage.getItem) === 'function' &&\n        typeof (storage.setItem) === 'function' &&\n        typeof (storage.removeItem) === 'function') {\n        this._cacheStorage = storage;\n      } else {\n        throw new Error(CachingServiceMessages.setCacheStorageError);\n      }\n    } else {\n      console.warn(CachingServiceMessages.setCacheStorageWarning); //eslint-disable-line\n    }\n  }\n\n  /**\n   * @function retrieve the data store used by this class.\n   */\n  getCacheStorage() {\n    return this._cacheStorage;\n  }\n\n  /**\n   * @function retrieve an item from the data store.\n   *\n   * @param {String} namespaceOrKey is either the key, or a descriptor of what is stored, used as part of the key to retrieve the item.\n   * @param {String} name the name of the item stored, used with the namespace to form the key.\n   */\n  getItem(namespaceOrKey, name) {\n    if (typeof (namespaceOrKey) === 'string' && typeof (name) === 'string') {\n      return JSON.parse(this._cacheStorage.getItem(`${namespaceOrKey}_${name}`));\n    } else if (typeof (namespaceOrKey) === 'string') {\n      return this._cacheStorage.getItem(`${namespaceOrKey}`);\n    }\n    throw new Error(CachingServiceMessages.getItemError);\n  }\n\n  /**\n   * @function save an item from the data store.\n   *\n   * @param {String} namespaceOrKey is either the key, or a descriptor of the item, used as part of the key to save the item.\n   * @param {String} name the name of the item, used with the namespace to form the key.\n   * @param {Object} item the item to be saved to the data store.\n   */\n  setItem(namespaceOrKey, name, item) {\n    if (typeof (namespaceOrKey) === 'string' && typeof (name) === 'string') {\n   /*\n    * - should we allow nulls to be stored?\n    * - do we need to JSON.strinfy(item)?\n    */\n      this._cacheStorage.setItem(`${namespaceOrKey}_${name}`, JSON.stringify(item));\n    } else if (typeof (namespaceOrKey) === 'string') {\n      // should we allow nulls to be stored?\n      this._cacheStorage.setItem(`${namespaceOrKey}`, item);\n    } else {\n      throw new Error(CachingServiceMessages.setItemError);\n    }\n  }\n\n  /**\n   * @function remove an item from the data store.\n   *\n   * @param {String} namespaceOrKey is either the key, or a descriptor of what is stored, used as part of the key to remove the item.\n   * @param {String} name the name of the item stored, used with the namespace to form the key.\n   */\n  removeItem(namespaceOrKey, name) {\n    if (typeof (namespaceOrKey) === 'string' && typeof (name) === 'string') {\n      // should we allow nulls to be stored?\n      this._cacheStorage.removeItem(`${namespaceOrKey}_${name}`);\n    } else if (typeof (namespaceOrKey) === 'string') {\n      // should we allow nulls to be stored?\n      this._cacheStorage.removeItem(`${namespaceOrKey}`);\n    } else {\n      throw new Error(CachingServiceMessages.removeItemError);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/caching/index.js","/**\n * Mingle Service class to handle single sign on and other Ming.le functions\n * @class MingleService\n */\nexport class MingleService {\n  /**\n   * Instantiates the MingleService object\n   * @param {Object} options Takes in a configuration object with the following structure:\n   * {\n   *    accessToken: string;\n   *    application: Object; // Based on mobile's version of an application\n   *    location: Object; // Based on the window.location\n   *    mingleConfig: {\n   *      mingleSettings: {\n   *        ci: string;\n   *        pu: string;\n   *        oa: string;\n   *      },\n   *      mingleRedirectUrl: string;\n   *    };\n   *    redirectAction: function(url: string) => void;\n   *    responseType: string; // Defaulted to 'token'\n   * }\n   */\n  constructor(options = {}) {\n    this.accessToken = options.accessToken || '';\n    this.application = options.application || {};\n    this.location = options.location || window.location;\n    this.mingleConfig = options.mingleConfig || {};\n    this.redirectAction = options.redirectAction || function redirect(url) {\n      this.location.href = url;\n    }.bind(this);\n    this.responseType = options.responseType || 'token';\n  }\n  /**\n   * @function Populates the access token based on the passed parameters\n   * @param {Object} state The current state to be bound to the url request\n   */\n  redirectToMingle(state) {\n    const authorizationUrl = this.mingleConfig.mingleSettings.pu + this.mingleConfig.mingleSettings.oa;\n    const redirectURI = this.mingleConfig.mingleRedirectUrl;\n    const clientId = this.mingleConfig.mingleSettings.ci;\n    const url =\n           `${authorizationUrl}?` +\n           `client_id=${encodeURI(clientId)}&` +\n           `redirect_uri=${encodeURI(redirectURI)}&` +\n           `response_type=${encodeURI(this.responseType)}&` +\n           `state=${encodeURI(state)}&` +\n           'include_granted_scopes=false';\n    this.redirectAction(url);\n  }\n  /**\n   * @function Refreshes the access token for Ming.le\n   */\n  refreshAccessToken() {\n    if (!this.application.isOnline()) {\n      this.application.requiresMingleRefresh = true;\n      return;\n    }\n\n    const hash = 'mingleRefresh'; // location.hash.substring(2);\n    let state = '';\n    if (hash) {\n      state = `/redirectTo/${hash}`;\n    }\n    this.redirectToMingle(state);\n  }\n  /**\n   * @function Populates the access token based on the passed parameters\n   * @param {Object} toast The toast service used by the application, expects a function 'add'\n   *  that is passed the following object:\n   *    {\n   *      message: string;\n   *      title: string;\n   *      toastTime: number;\n   *      showProgressBar: boolean;\n   *    }\n   * @param {string} refreshText The message to be displayed by the toast service\n   * @param {string} refreshTitle The title of the toast to display when refreshing the token\n   */\n  populateAccessToken(toast, refreshText = 'Refreshing Ming.le token...', refreshTitle = 'Ming.le') {\n    const hash = this.location.hash.substring(1);\n    let result;\n    if (hash) {\n      result = hash.split('&').reduce((values, item) => {\n        const parts = item.split('=');\n        values[parts[0]] = parts[1];\n        return values;\n      }, {});\n\n      if (result.access_token) {\n        this.accessToken = result.access_token;\n        if (result.expires_in) {\n          // result.expires_in = '420'; // Refresh Test\n          setTimeout(() => {\n            toast.add({ message: refreshText, title: refreshTitle, toastTime: 300 * 1000, showProgressBar: true });\n            setTimeout(() => { this.refreshAccessToken(this.mingleConfig); }, 300 * 1000);\n            // Show message to user before 5 minutes of refresh (300 seconds)\n          }, (result.expires_in - 300) * 1000);\n        }\n      }\n    }\n\n    if (result) {\n      if (result.access_token || result.error) {\n        return result;\n      }\n    }\n\n    this.redirectToMingle(hash);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mingle/index.js","/**\n * Picklist Service class\n */\nexport class PickListService {\n  /**\n   * Initialize Sage.PickListService\n   * @param {Object} storage\n   * @param {Object} service\n   */\n  constructor(storage = {}, service = null) {\n    this._storage = storage;\n    this._service = service;\n    this._uri = {};\n    this._storageNameSpace = 'PickListData';\n    this._storagePropertyDataTypeNameSpace = 'PickListData_PropertyDataType';\n    this._storageFormDataTypeNameSpace = 'PickListData_FormDataType';\n  }\n  /** CRUD **/\n  /** Create **/\n  /**\n   * @function create a picklist header record.\n   * @param {PickListObject} header\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  createHeader(header, callback, onError, scope) {\n    this._notImplemented('createHeader', { header, callback, onError, scope });\n  }\n  /**\n   * @function create a picklist item record.\n   * @param {String} headerId refers to a picklist header by its id.\n   * @param {PickListItemObject} item\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  createItemByHeaderID(headerId, item, callback, onError, scope) {\n    this.createItemByHeaderKey(headerId, true, item, callback, onError, scope);\n  }\n  /**\n   * @function create a picklist item record.\n   * @param {String} headerName refers to a picklist header by its name.\n   * @param {PickListItemObject} item\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  createItemByHeaderName(headerName, item, callback, onError, scope) {\n    this.createItemByHeaderKey(headerName, false, item, callback, onError, scope);\n  }\n  /**\n   * @function create a picklist item record.\n   * @param {String} headerKey refers to a picklist by either the Id or Name value.\n   * @param {Boolean} isId true ? the headerKey is an Id : the headerKey is a Name\n   * @param {PickListItemObject} item\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  createItemByHeaderKey(headerKey, isId, item, callback, onError, scope) {\n    this._notImplemented('createItemByHeaderKey', { headerKey, isId, item, callback, onError, scope });\n  }\n  /**\n   * @function create a picklist item record.\n   * @param {String} headerId refers to a picklist header by its id.\n   * @param {PickListItemObject[]} itemArr\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  createItemsByHeaderID(headerId, itemArr, callback, onError, scope) {\n    this.createItemsByHeaderKey(headerId, true, itemArr, callback, onError, scope);\n  }\n  /**\n   * @function create a picklist item record.\n   * @param {String} headerName refers to a picklist header by its name.\n   * @param {PickListItemObject[]} itemArr\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  createItemsByHeaderName(headerName, itemArr, callback, onError, scope) {\n    this.createItemsByHeaderKey(headerName, false, itemArr, callback, onError, scope);\n  }\n  /**\n   * @function create a picklist item record.\n   * @param {String} headerKey refers to a picklist by either the Id or Name value.\n   * @param {Boolean} isId true ? the headerKey is an Id : the headerKey is a Name\n   * @param {PickListItemObject[]} itemArr\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  createItemsByHeaderKey(headerKey, isId, itemArr, callback, onError, scope) {\n    this._notImplemented('createItemsByHeaderKey', { headerKey, isId, itemArr, callback, onError, scope });\n  }\n\n  /** Request **/\n  /** header and items **/\n  /**\n   * @function get one picklist(this first found) record with items.\n   * @param {String} name refers to the name property of a picklist header.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  getFirstByName(name, callback, onError, scope) {\n    return this.getFirstByKey(name, false, true, callback, onError, scope);\n  }\n  /**\n   * @function get one picklist(this first found) record with items.\n   * @param {String} id refers to the id property of a picklist header.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  getFirstById(id, callback, onError, scope) {\n    return this.getFirstByKey(id, false, false, callback, onError, scope);\n  }\n  /**\n   * @function get one picklist(this first found) record with items.\n   * @param {String} key refers to a picklist by either the Id or Name value.\n   * @param {Boolean} isId if true, then the key is an Id, else the key is a Name.\n   * @param {Boolean} useCache if true, then cache the response of the request, else don't cache the response.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  getFirstByKey(key, isId, useCache, callback, onError, scope = {}) {\n    const cachedResult = useCache ? this._storage.getItem(this._storageNameSpace, `${key}_${scope.language}`) : null;\n    if (cachedResult) {\n      callback(cachedResult);\n    } else {\n      const options = this._buildOutOptions(scope, true);\n      options.where = this._isNameOrID(isId, key);\n      return {\n        options,\n        handlers: {\n          success: (result) => {\n            if (result && result.$resources && result.$resources.length > 0) {\n              result = result.$resources[0];\n            }\n            if (useCache) {\n              this._storage.setItem(this._storageNameSpace, `${key}_${scope.language}`, result);\n            }\n            if (typeof (callback) === 'function') {\n              callback(result);\n            } else {\n              console.log('picklistservice getByName success: %o', arguments); //eslint-disable-line\n            }\n          },\n          failure: (response) => {\n            if (typeof (onError) === 'function') {\n              onError(response);\n            } else {\n              console.log('picklistservice getByName failure: %o', arguments); //eslint-disable-line\n            }\n          },\n          scope: { passedIn: scope },\n        },\n      };\n    }\n  }\n  /**\n   * @function get a list of picklists record with items.\n   * @param {String[]} nameArr refers to the name property of a picklist header.\n   * @param {Boolean} useCache if true, then cache the response of the request, else don't cache the response.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  getAllByName(nameArr, useCache, callback, onError, scope) {\n    this.getAllByKey(nameArr, false, useCache, callback, onError, scope);\n  }\n  /**\n   * @function get a list of picklists record with items.\n   * @param {String[]} idArr refers to the id property of a picklist header.\n   * @param {Boolean} useCache if true, then cache the response of the request, else don't cache the response.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  getAllById(idArr, useCache, callback, onError, scope) {\n    this.getAllByKey(idArr, true, useCache, callback, onError, scope);\n  }\n  /**\n   * @function get a list of picklists record with items.\n   * @param {String} keyArr refers to a picklist by either the Id or Name value.\n   * @param {Boolean} isId if true, then the key is an Id, else the key is a Name.\n   * @param {Boolean} useCache if true, then cache the response of the request, else don't cache the response.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  getAllByKey(keyArr, isId, useCache, callback, onError, scope) {\n    this._notImplemented('getAllByKey', { keyArr, isId, useCache, callback, onError, scope });\n  }\n\n  /** Update **/\n  /**\n   * @function update a picklist record.\n   * @param {PickListObject} pickList\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  update(pickList, callback, onError, scope) {\n    this._notImplemented('update', { pickList, callback, onError, scope });\n  }\n\n  /** Delete **/\n  /** header and items **/\n  /**\n   * @function remove a picklist header and its items record.\n   * @param {String} name refers to the name property of a picklist header.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  deleteByName(name, callback, onError, scope) {\n    this.deleteByKey(name, false, callback, onError, scope);\n  }\n  /**\n   * @function remove a picklist header and its items record.\n   * @param {String} name refers to the id property of a picklist header.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  deleteById(id, callback, onError, scope) {\n    this.deleteByKey(id, true, callback, onError, scope);\n  }\n  /**\n   * @function remove a picklist header and its items record.\n   * @param {String} key refers to a picklist by either the Id or Name value.\n   * @param {Boolean} isId if true, then the key is an Id, else the key is a Name.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  deleteByKey(key, isId, callback, onError, scope) {\n    this._notImplemented('deleteByKey', { key, isId, callback, onError, scope });\n  }\n\n  /** No just header delete, because that would produce \"orphaned\" picklist items **/\n\n  /** just items **/\n  /**\n   * @function remove a picklist item record.\n   * @param {String} name refers to the name property of a picklist header.\n   * @param {String} code refers to the code property of a picklist item.\n   * @param {String} language refers to the language property of a picklist item.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  deleteItemByHeaderName(name, code, language, callback, onError, scope) {\n    this.deleteItemByHeaderKey(name, false, code, language, callback, onError, scope);\n  }\n  /**\n   * @function remove a picklist item record.\n   * @param {String} id refers to the id property of a picklist header.\n   * @param {String} code refers to the code property of a picklist item.\n   * @param {String} language refers to the language property of a picklist item.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  deleteItemByHeaderId(id, code, language, callback, onError, scope) {\n    this.deleteItemByHeaderKey(id, true, code, language, callback, onError, scope);\n  }\n  /**\n   * @function remove a picklist item record.\n   * @param {String} key refers to the id or name property of a picklist header.\n   * @param {Boolean} isId if true, then the key is an Id, else the key is a Name.\n   * @param {String} code refers to the code property of a picklist item.\n   * @param {String} language refers to the language property of a picklist item.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  deleteItemByHeaderKey(key, isId, code, language, callback, onError, scope) {\n    this._notImplemented('deleteItemByHeaderKey', { key, isId, code, language, callback, onError, scope });\n  }\n  /**\n   * @function remove a picklist item record.\n   * @param {String} key refers to the id property of a picklist item.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} scope provides access to variables needed inside the response.\n   */\n  deleteItemById(id, callback, onError, scope) {\n    this._notImplemented('deleteItemById', { id, callback, onError, scope });\n  }\n\n  /** Getting PickList DataTypeData information */\n  getPickListDataTypeDataFromEntityProperty(entityName, propertyName, callback, onError, scope) {\n    const cachedResult = this._storage.getItem(this._storagePropertyDataTypeNameSpace, `${entityName}_${propertyName}`);\n    if (cachedResult) {\n      callback(cachedResult);\n    } else {\n      return {\n        options: {\n          select: ['DataTypeData'],\n          resourceKind: `entities('${entityName}')/properties`,\n          service: 'metadata',\n          language: scope.language || this._getBrowserLanguage(false),\n          include: ['DataTypeData'],\n          where: `propertyName eq '${propertyName}'`,\n        },\n        handlers: {\n          success: (result) => {\n            if (result && result.$resources && result.$resources.length > 0) {\n              result = result.$resources[0];\n            }\n            this.parent._storage.setItem(this.parent._storageDataTypeNameSpace, `${entityName}_${propertyName}`, result);\n            if (typeof (callback) === 'function') {\n              callback(result);\n            } else {\n              console.log('picklistservice getPickListDataTypeDataFromEntityProperty success: %o', arguments); //eslint-disable-line\n            }\n          },\n          failure: (response) => {\n            if (typeof (onError) === 'function') {\n              onError(response);\n            } else {\n              console.log('picklistservice getPickListDataTypeDataFromEntityProperty failure: %o', arguments); //eslint-disable-line\n            }\n          },\n          scope: { parent: this, passedIn: scope },\n        },\n      };\n    }\n  }\n  getPickListDataTypeDataFromForm(formName, pickListName = null, callback, onError, scope) {\n    const cachedResult = this._storage.getItem(this._storageFormDataTypeNameSpace, pickListName ? `${formName}_${pickListName}` : `${formName}`);\n    if (cachedResult) {\n      callback(cachedResult);\n    } else {\n      return {\n        options: {\n          resourceKind: `forms('${formName}')`,\n          service: 'metadata',\n          language: scope.language || this._getBrowserLanguage(false),\n        },\n        handlers: {\n          success: (result) => {\n            if (result && result.$resources && result.$resources.length > 0) {\n              result = result.$resources[0];\n            }\n            this.parent._storage.setItem(this.parent._storageFormDataTypeNameSpace, pickListName ? `${formName}_${pickListName}` : `${formName}`, result);\n            if (typeof (callback) === 'function') {\n              callback(result);\n            } else {\n              console.log('picklistservice getPickListDataTypeDataFromForm success: %o', arguments); //eslint-disable-line\n            }\n          },\n          failure: (response) => {\n            if (typeof (onError) === 'function') {\n              onError(response);\n            } else {\n              console.log('picklistservice getPickListDataTypeDataFromForm failure: %o', arguments); //eslint-disable-line\n            }\n          },\n          scope: { parent: this, passedIn: scope },\n        },\n      };\n    }\n  }\n  /** Caching **/\n  /**\n   * @function removes a cached item.\n   * @param {String} name reference to an item that has been cached.\n   *\n   * --Uses the storage value provided in the constructor.\n   */\n  clearCache(name) {\n    if (typeof (name) === 'string') {\n      const item = this._storage.getItem(this._storageNameSpace, name);\n      if (item) {\n        this._storage.removeItem(this._storageNameSpace, name);\n      }\n    } else {\n      console.warn('argument needs to be a String.'); //eslint-disable-line\n    }\n  }\n\n  /** MISC **/\n  /**\n   * @function clones the this class.\n   */\n  deepClone() {\n    return JSON.parse(JSON.stringify(this));\n  }\n  /**\n   * @function build up a request\n   * @param {Object} obj needs to contain the functions:\n   *                      setResourceKind()\n   *                      setQueryArg()\n   *\n   * @param {Object} options can contain\n   *                      {\n   *                          where: String?\n   *                          select: String?\n   *                          include: Boolean?\n   *                          language: String?\n   *                          storageMode: {CODE, ID, TEXT}\n   *                      }\n   */\n  setUpRequest(obj, options) { /* though this could be a static function, that does not seem right since it is not much use outside this scope*/ //eslint-disable-line \n    if (obj && options) {\n      if (typeof (obj.setResourceKind) === 'function' && typeof (obj.setQueryArg) === 'function') {\n        obj.setResourceKind(options.resourceKind);\n\n        if (options.where && options.where.length > 0) {\n          obj.setQueryArg('where', options.where);\n        }\n        if (options.select && options.select.length > 0) {\n          obj.setQueryArg('select', options.select.join(','));\n        }\n        if (options.include && options.include.length > 0) {\n          obj.setQueryArg('include', options.include.join(','));\n        }\n        if (options.language) {\n          obj.setQueryArg('language', options.language);\n        }\n        if (options.storageMode) {\n          obj.setQueryArg('storageMode', options.storageMode);\n        }\n      } else {\n        console.warn('argument is the wrong type: %o', obj); //eslint-disable-line\n      }\n    } else {\n      console.warn('arguments cannot be null'); //eslint-disable-line\n    }\n    return obj;\n  }\n\n  /* ** private functions **/\n  _buildHash(results) {\n    this._notImplemented('_buildHash', { results });\n  }\n  _returnOption(optionName, callback, onError, scope) {\n    this._notImplemented('_returnOption', { optionName, callback, onError, scope });\n  }\n  _isNameOrID(isId, key) { /* though this could be a static function, that does not seem right since it is not much use outside this scope*/ //eslint-disable-line\n    if (typeof (isId) === 'boolean' && typeof (key) === 'string') {\n      return isId ? `id eq '${key}'` : `name eq '${key}'`;\n    }\n    throw new Error('isId needs to be a boolean; key needs to be a string');\n  }\n  _buildOutOptions(scope = {}, includeItems = true) {\n    const optionsObj = {\n      select: [\n        'Id',\n        'name',\n        'allowMultiples',\n        'valueMustExist',\n        'required',\n        'alphaSorted',\n        'noneEditable',\n        'defaultLanguage',\n        'defaultCode',\n        // Include modifyDate to ensure that local storage data stays current.\n        'modifyDate',\n      ],\n      resourceKind: 'picklists',\n      service: this._service,\n      language: scope.language || this._getBrowserLanguage(false),\n    };\n    if (includeItems) {\n      optionsObj.include = ['items'];\n      optionsObj.select.push('items/text');\n      optionsObj.select.push('items/code');\n      optionsObj.select.push('items/number');\n      optionsObj.select.push('items/filter');\n      optionsObj.select.push('items/languageCode');\n    }\n    if (scope.pickListServiceOptions) {\n      if (scope.pickListServiceOptions.filter) {\n        optionsObj.filter = scope.pickListServiceOptions.filter;\n      }\n\n      if (scope.pickListServiceOptions.storageMode) {\n        optionsObj.storageMode = scope.pickListServiceOptions.storageMode;\n      }\n    }\n    return optionsObj;\n  }\n  _breakDownALanguageCodeIntoFallBackParts(strLangCode = '') { /* though this could be a static function, it is a private helper function that works strictly within the scope of _getBrowserLanguage*/ //eslint-disable-line\n    const userLangs = strLangCode.split('-');\n    const potentialLanguage = [];\n    for (let i = 0; i < userLangs.length; i++) {\n      let strVal = '';\n      for (let j = 0; j <= i; j++) {\n        strVal = strVal + (strVal.length > 0 ? '_' : '') + userLangs[j];\n      }\n      potentialLanguage.push(strVal);\n    }\n    return potentialLanguage;\n  }\n  _getBrowserLanguage(includeFallbacks = false) {\n    const languageFromCookie = this._getLanguageFromCookie();\n    let userLang = languageFromCookie || this._getFromLanguageFromNavigator();\n    if (!userLang) {\n      console.warn('no browser language found, will assume en-en for the rest.'); /* give warning because something went wrong... or in test enviroment */ //eslint-disable-line\n      userLang = 'en-en';\n    }\n    if (includeFallbacks) {\n      const languagePlusFallBacks = this._breakDownALanguageCodeIntoFallBackParts(userLang);\n      return languagePlusFallBacks;\n    }\n    return userLang;\n  }\n  _getFromLanguageFromNavigator() { /* does not need to reference this, it is a helper for _getBrowserLanguage */ //eslint-disable-line\n    if (typeof navigator !== 'undefined') {\n      return navigator.userLanguage || navigator.browserLanguage || navigator.language;\n    }\n    console.warn('no navigator object found. hardcoding language to en-en'); /* give warning because something went wrong... or in test enviroment */ //eslint-disable-line\n    return null;\n  }\n  _getLanguageFromCookie() {\n    let languageFromCookie = null;\n    const cookieLangaugeKey = 'SLXLanguageSetting';\n    if (typeof window !== 'undefined' && window.document && window.document.cookie) {\n      if ((typeof window.document.cookie.getCookie) === 'function') {\n        languageFromCookie = window.document.cookie.getCookie(cookieLangaugeKey);\n      } else {\n        const cookies = window.document.cookie.split(';');\n        cookies.forEach((cookie) => {\n          cookie = cookie.trim();\n          if (cookie.startsWith(cookieLangaugeKey)) {\n            cookie = cookie.replace(`${cookieLangaugeKey}`, '').trim(); // remove the key part of the cookie and any spaces\n            cookie = cookie.replace('=', '').trim(); // because there may or may not be a space between the key and '=', then remove now.\n            languageFromCookie = cookie;\n          }\n        }, this);\n      }\n    } else {\n      console.warn('no window/window.document/window.document.cookie object found');/* give warning because something went wrong... or in test enviroment */ //eslint-disable-line\n    }\n    return languageFromCookie;\n  }\n  _notImplemented(functionName, params) {/* a function to give the unimplemented functions a call to hush lint errors*/ //eslint-disable-line\n    throw new Error('%s with parameters %o is not implemented', functionName, params);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/picklist/index.js","/**\n * @module\n * @description\n * Services API\n */\nexport * from './src';\n\n\n\n// WEBPACK FOOTER //\n// ./index.js"],"sourceRoot":""}